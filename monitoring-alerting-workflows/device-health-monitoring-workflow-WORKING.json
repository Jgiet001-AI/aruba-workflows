{
  "name": "Device Health Monitor",
  "nodes": [
    {
      "id": "node-1",
      "name": "Every 5 minutes",
      "type": "n8n-nodes-base.scheduleTrigger",
      "typeVersion": 1,
      "position": [250, 300],
      "parameters": {
        "rule": {
          "interval": [
            {
              "field": "minutes",
              "minutesInterval": 5
            }
          ]
        }
      }
    },
    {
      "id": "node-2",
      "name": "Get Device Health",
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4,
      "position": [450, 300],
      "parameters": {
        "method": "GET",
        "url": "https://central.arubanetworks.com/api/v2/monitoring/stats",
        "authentication": "predefinedCredentialType",
        "nodeCredentialType": "httpHeaderAuth",
        "options": {
          "timeout": 30000
        }
      }
    },
    {
      "id": "node-3",
      "name": "Check CPU Threshold",
      "type": "n8n-nodes-base.if",
      "typeVersion": 2,
      "position": [650, 300],
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "strict"
          },
          "conditions": [
            {
              "id": "condition-1",
              "leftValue": "={{$json.cpu_usage}}",
              "rightValue": 80,
              "operator": {
                "type": "number",
                "operation": "gt"
              }
            }
          ],
          "combinator": "and"
        }
      }
    },
    {
      "id": "node-4",
      "name": "Send Alert",
      "type": "n8n-nodes-base.function",
      "typeVersion": 1,
      "position": [850, 200],
      "parameters": {
        "functionCode": "// Send alert notification\nconst deviceName = $input.first().json.device_name || 'Unknown Device';\nconst cpuUsage = $input.first().json.cpu_usage || 0;\n\nreturn [{\n  json: {\n    message: `High CPU usage detected on ${deviceName}: ${cpuUsage}%`,\n    severity: 'warning',\n    timestamp: new Date().toISOString(),\n    device: deviceName,\n    metric: 'cpu_usage',\n    value: cpuUsage,\n    threshold: 80\n  }\n}];"
      }
    }
  ],
  "connections": {
    "Every 5 minutes": {
      "main": [
        [
          {
            "node": "Get Device Health",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Get Device Health": {
      "main": [
        [
          {
            "node": "Check CPU Threshold",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Check CPU Threshold": {
      "main": [
        [
          {
            "node": "Send Alert",
            "type": "main",
            "index": 0
          }
        ]
      ]
    }
  },
  "settings": {
    "executionOrder": "v1",
    "saveDataErrorExecution": "all",
    "saveDataSuccessExecution": "all",
    "saveManualExecutions": true,
    "saveExecutionProgress": true
  },
  "active": false
}